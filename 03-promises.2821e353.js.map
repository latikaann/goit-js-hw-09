{"mappings":"iiBACA,IAAAA,EAAAC,EAAA,SAGMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,WAAYF,SAASC,cAAc,uBACnCE,UAAWH,SAASC,cAAc,sBAClCG,OAAQJ,SAASC,cAAc,yBAGnBI,EAAkCP,EAAlCI,WAAYI,EAAsBR,EAAtBK,UAAWI,EAAWT,EAAXM,OAIrC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAdyCZ,EAAxCC,KAEHmB,iBAAiB,UAgBtB,SAAsBC,GACpBA,EAAEC,iBAEF,IAAK,IAAIC,EAAI,EAAGA,EAAId,EAAOe,MAAOD,IAAK,CACrC,IAAIE,EAAWF,EAAI,EACbG,EAASC,OAAOpB,EAAWiB,OAAShB,EAAUgB,MAAQD,EAE5Db,EAAce,EAAUC,GACrBE,MAAK,SAAAC,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MACjBkB,EAAAhC,GAASiC,OAAOC,QACd,uBAAwCC,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,IAGjDsB,OAAM,SAAAL,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MAClBkB,EAAAhC,GAASiC,OAAOI,QACd,sBAAqCF,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["//\nimport Notiflix from 'notiflix';\n//\n\nconst refs = {\n  form: document.querySelector('.form'),\n  firstDelay: document.querySelector('input[name=\"delay\"]'),\n  stepDelay: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n};\n\nconst { form, firstDelay, stepDelay, amount } = refs;\n\nform.addEventListener('submit', onSubmitForm);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onSubmitForm(e) {\n  e.preventDefault();\n  // console.log(e.target);\n  for (let i = 0; i < amount.value; i++) {\n    let position = i + 1;\n    const delays = Number(firstDelay.value) + stepDelay.value * i;\n\n    createPromise(position, delays)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","firstDelay","stepDelay","amount","$ce04d3a99e08e73b$var$firstDelay","$ce04d3a99e08e73b$var$stepDelay","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","i","value","position1","delays","Number","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.2821e353.js.map"}